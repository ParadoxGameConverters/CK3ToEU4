# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
name: "CodeQL"

on:
  push:
    branches: [master]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]
  schedule:
    - cron: '0 16 * * 6'

jobs:
  analyze_main:
    name: Analyze Local
    if: github.repository_owner == 'ParadoxGameConverters'
    runs-on: [self-hosted, linux]

    strategy:
      fail-fast: false
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
    - name: Clean Release folder
      run: |
       rm -rf Release/
       mkdir Release
   
    - name: Build solution
      run: |
       chmod u+x build_linux.sh
       ./build_linux.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
    - name: Cleanup
      uses: colpal/actions-clean@v1
      if: always() # To ensure this step runs even when earlier steps fail      

  analyze:
    name: Analyze Foreign
    if: github.repository_owner != 'ParadoxGameConverters'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: "Setup Dotnet for use with actions"
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: Fronter.NET/global.json
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
       
    - name: Build solution
      run: |
       sudo apt-get update
       sudo apt-get install libcurl4-openssl-dev
       mkdir $HOME/usr
       export PATH="$HOME/usr/bin:$PATH"
       wget https://cmake.org/files/v3.17/cmake-3.17.2-Linux-x86_64.sh
       chmod +x cmake-3.17.2-Linux-x86_64.sh
       ./cmake-3.17.2-Linux-x86_64.sh --prefix=$HOME/usr --exclude-subdir --skip-license
       sudo add-apt-repository ppa:ubuntu-toolchain-r/test
       sudo apt-get update
       sudo apt-get install gcc-11 g++-11
       # Link gcc-11 and g++-11 to their standard commands
       sudo ln -s /usr/bin/gcc-11 /usr/local/bin/gcc
       sudo ln -s /usr/bin/g++-11 /usr/local/bin/g++
       # Export CC and CXX to tell cmake which compiler to use
       export CC=/usr/bin/gcc-11
       export CXX=/usr/bin/g++-11
       # Check versions of gcc, g++ and cmake
       gcc -v && g++ -v && cmake --version
       # Run your build commands next       
       chmod u+x build_linux_foreign.sh
       ./build_linux_foreign.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
